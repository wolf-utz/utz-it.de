---
import {useTranslations} from '../i18n/utils';
import {ContactFormApiResponse} from '../types';
import Alert from "./Alert.astro";

const t = useTranslations('de');
---

<div id="contactForm" class="lead">
    <Alert type="success" message={t('form.submitSuccessful')} classList={["d-none"]} id="submit-success-alert"/>
    <Alert type="danger" message={t('form.submitFailure')} classList={["d-none"]} id="submit-error-alert"/>
    <form id="inquiryForm" method="post" novalidate>
        <div class="row">
            <div class="col-12 col-md-6 mb-3">
                <div class="mb-3">
                    <label for="inquiry_email" class="form-label required">
                        {t('form.field.label.email')}
                    </label>
                    <input type="email" id="inquiry_email" name="email" required="required"
                           placeholder={t('form.field.placeholder.email')} class="form-control">
                </div>
            </div>
            <div class="col-12 col-md-6 mb-3">
                <div class="mb-3">
                    <label for="inquiry_name" class="form-label">
                        {t('form.field.label.name')} <small class="text-muted">({t('form.field.optional')})</small>
                    </label>
                    <input type="text" id="inquiry_name" name="name" class="form-control"
                           placeholder={t('form.field.placeholder.name')}>
                </div>
            </div>
        </div>
        <div class="mb-3">
            <label for="inquiry_message" class="form-label required">
                {t('form.field.label.message')}
            </label>
            <textarea id="inquiry_message" name="message" required="required" style="min-height: 10rem"
                      placeholder={t('form.field.placeholder.message')} class="form-control"/>
        </div>
        <div class="mb-3">
            <div class="form-check">
                <input type="checkbox" id="inquiry_acceptDataPrivacy"
                       name="inquiry[acceptDataPrivacy]" required="required"
                       class="form-check-input" value="1">
                <label class="form-check-label required" for="inquiry_acceptDataPrivacy"
                       set:html={t('form.field.label.acceptDataPrivacy')}/>
            </div>
        </div>
        <input type="hidden" id="inquiry_sendCopyToReceiver" name="sendCopyToReceiver">
        <div class="mb-3">
            <button type="submit" id="inquiry_submit" name="submit" class="btn-custom btn-xl btn">
                {t('form.field.label.submit')}
            </button>
        </div>
    </form>
</div>

<script>
    import Contact from '../struct/Contact.ts'

    (() => {
        const form: HTMLFormElement | null = document.getElementById('inquiryForm');
        if (form === null) {
            console.error("Missing contact form element.")
            return;
        }

        const url: string = import.meta.env.PUBLIC_CONTACT_API_URL

        function obSubmit(event: SubmitEvent) {
            event.preventDefault()
            event.stopPropagation()
            form.classList.add('was-validated')

            if (form.checkValidity()) {
                const contact: Contact = Contact.fromFromData(new FormData(event.target));
                fetch(url, {
                    method: 'POST',
                    body: contact.toJson(),
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                    .then((response: Response) => response.json())
                    .then((data: ContactFormApiResponse) => {
                        if (data?.success) {
                            form.classList.remove('was-validated');
                            form.reset();
                            showSuccessAlert()
                            return;
                        }
                        showErrorAlert()
                        throw new Error("Contact request failed.")
                    })
                    .catch(error => {
                        showErrorAlert()
                        console.error(error);
                    })
            }
        }

        function showErrorAlert() {
            const successAlert = document.getElementById('submit-success-alert');
            const errorAlert = document.getElementById('submit-error-alert');

            errorAlert.classList.remove('d-none')
            successAlert.classList.add('d-none')
        }

        function showSuccessAlert() {
            const successAlert = document.getElementById('submit-success-alert');
            const errorAlert = document.getElementById('submit-error-alert');

            successAlert.classList.remove('d-none')
            errorAlert.classList.add('d-none')
        }

        form?.addEventListener('submit', obSubmit)
    })();
</script>